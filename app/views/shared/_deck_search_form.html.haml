- if controller_name == 'pages' || controller_name == 'decks' # don't display navbar search in views such as users or user groups
  = simple_form_for(category, method: :get, url: decks_path) do |f|
    - if controller_name == 'pages'
      - # Landing page uses pages controller as content is not separated by tabs as in the deck index.
      .deck-search{'data-controller'=>'pages-search'}
        .deck-search-row-one
          - if params.key?('category')
            - category_name = params['category']['name'] if params['category'].key?('name')
            = f.input :name, collection: Category.generate_categories, required: true, label: false, selected: category_name, input_html: { multiple: true, data: { target: 'pages-search.categorySelect'}}, include_hidden: false, as: :grouped_select, group_method: :last
            - params['category'].key?('language') ? language = params['category']['language'] : language = 'en'
            = f.input :language, collection: languages.map { |key, value| [key, value] }, label: false, selected: language, required: true, input_html: {data: { target: 'pages-search.languageSelect'}}
          - else
            = f.input :name, collection: Category.generate_categories, required: true, label: false, selected: Category.find_by(name: 'All Categories').id, input_html: { multiple: true, data: { target: 'pages-search.categorySelect'} }, include_hidden: false, as: :grouped_select, group_method: :last
            = f.input :language, collection: languages.map { |key, value| [key, value] }, label: false, selected: 'en', required: true, input_html: {data: { target: 'pages-search.languageSelect'}}
          .deck-search-tags
            - if params.key?('category')
              - params['category'].key?('tag') ? tag = params['category']['tag'] : tag = ''
              = f.input :tag, collection: Tag.search_select, label: false, include_hidden: false, input_html: { multiple: true, value: tag, data: { target: 'pages-search.tagSelect' } }
            - else
              = f.input :tag, collection: Tag.search_select, label: false, include_hidden: false, input_html: { multiple: true, data: { target: 'pages-search.tagSelect' } }
          = f.submit 'Find cards to review', class: "btn btn-primary search-submit", data: { target: 'pages-search.searchSubmit' }
    - elsif controller_name == 'decks'
      - if params.key?('category')
        - params['category'].key?('language') ? language = params['category']['language'] : language = 'en'
        = f.input :language, collection: languages.map { |key, value| [key, value] }, label: 'Language', selected: language, required: true, input_html: {data: { target: 'deck-tabs.languageSelect'}}
        - category_name = params['category']['name'] if params['category'].key?('name')
        = f.input :name, collection: Category.generate_categories, required: true, label: 'Categories', selected: category_name, input_html: { multiple: true, data: { target: 'deck-tabs.categorySelect'}}, include_hidden: false, as: :grouped_select, group_method: :last
      - else
        = f.input :language, collection: languages.map { |key, value| [key, value] }, label: 'Language', selected: 'en', required: true, input_html: {data: { target: 'deck-tabs.languageSelect'}}
        = f.input :name, collection: Category.generate_categories, required: true, label: false, selected: Category.find_by(name: 'All Categories').id, input_html: { multiple: true, data: { target: 'deck-tabs.categorySelect'} }, include_hidden: false, as: :grouped_select, group_method: :last
      .deck-search-tags
        - if params.key?('category')
          - params['category'].key?('tag') ? tag = params['category']['tag'] : tag = ''
          = f.input :tag, collection: Tag.search_select, label: 'Tags', selected: tag, include_hidden: false, input_html: { multiple: true, data: { target: 'deck-tabs.tagSelect' } }
        - else
          = f.input :tag, collection: Tag.search_select, label: 'Tags', include_hidden: false, input_html: { multiple: true, data: { target: 'deck-tabs.tagSelect' } }
      = f.submit 'Find cards to review', class: "btn btn-primary", data: { target: 'deck-tabs.searchSubmit' }


